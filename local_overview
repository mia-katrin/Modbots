#!/usr/bin/env python3

import json
import argparse
import os
import numpy as np
import re
from localconfig import config
from tqdm import tqdm
import pickle
import argparse

from square import SquareManager

def refresh_treat_experiment_folder(exp_folder, squareManager):
    for dir in tqdm(os.listdir(exp_folder)):
        run_folder = f"{exp_folder}/{dir}"
        if not os.path.isfile(run_folder):
            squareManager.add_run(run_folder)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--nr_runs", "-n", action="store_true", default=False)
    parser.add_argument("--record", "-r", action="store_true", default=False)
    parser.add_argument("--mode", "-m", type=str, default=None)
    parser.add_argument("--brain", "-br", type=str, default=None)
    parser.add_argument("--cs", "-c", nargs='*', required=False)
    parser.add_argument("--bs", "-b", nargs='*', required=False)
    args = parser.parse_args()

    squareManager = SquareManager()

    refresh_treat_experiment_folder("experiments_temp", squareManager)

    if args.record:
        failed = 0
        while failed < 10:
            brain = args.brain if args.brain != None else np.random.choice(list(squareManager.squares.keys()))
            mode = args.mode if args.mode != None else np.random.choice(list(squareManager.squares[brain].keys()))
            square = squareManager.squares[brain][mode]

            c = float(np.random.choice(args.cs)) if args.cs != None and len(args.cs) != 0 else np.random.choice(list(square.runs.keys()))
            b = float(np.random.choice(args.bs)) if args.bs != None and len(args.bs) != 0 else np.random.choice(list(square.runs[c].keys()))

            runNr = np.random.choice(square.runs[c][b])
            file = square.experiment_folder + "/run" + str(runNr) + "/bestInd49"

            print(f"Trying to find a {brain} {mode} individual with tuning c:{c} b:{b}")
            if os.path.exists(file):
                os.system(f"python3 xplore_ind.py --gene {file} --record")
                break
            else:
                print(f"Path {file} does not exist")
    else:
        squareManager.print_all(runs=args.nr_runs)
